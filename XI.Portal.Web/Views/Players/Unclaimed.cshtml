@using XI.Portal.Library.Auth.Extensions
@using XI.Portal.Data.CommonTypes
@using Microsoft.AspNet.Identity
@using XI.Portal.Web.Extensions
@model List<XI.Portal.Data.Core.Models.AdminAction>

@{
    ViewBag.Title = "Unclaimed Bans";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">

    @if (!Model.Any())
    {
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-content">
                        <h1 style="text-align: center">There are no unclaimed bans! - Well Done!</h1>
                    </div>
                </div>
            </div>
        </div>
    }

    @foreach (var item in Model)
    {
        <div class="row">
            <div class="col-lg-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-content">
                        <h2>
                            @Html.GameTypeIcon(item.Player.GameType) @item.Type Record for @Html.ActionLink(item.Player.Username, "Details", "Players", new { id = item.Player.PlayerId }, new { })
                        </h2>
                        <p>
                            @if (item.Admin == null)
                            {
                                <text><strong>Created By:</strong> System</text>
                            }
                            else
                            {
                                <text><strong>Created By:</strong> </text>
                                @item.Admin.UserName
                            }

                            <br />
                            <strong>Created:</strong> @item.Created

                            @if (item.Type == AdminActionType.TempBan && item.Expires > DateTime.UtcNow)
                            {
                                <br />
                                <text><strong>Expires:</strong> @item.Expires</text>
                            }
                            else if (item.Type == AdminActionType.TempBan)
                            {
                                <br />
                                <text><strong>Expired:</strong> @item.Expires</text>
                            }

                            @if (item.Type == AdminActionType.Ban && item.Expires != null)
                            {
                                <br />
                                <text><strong>Ban Lifted:</strong> @item.Expires</text>
                            }
                        </p>

                        @{
                            string style;
                            switch (item.Type)
                            {
                                case AdminActionType.Observation:
                                    style = "info";
                                    break;
                                case AdminActionType.Warning:
                                    style = "info";
                                    break;
                                case AdminActionType.Kick:
                                    style = "warning";
                                    break;
                                case AdminActionType.TempBan:
                                    style = item.Expires < DateTime.UtcNow ? "dark" : "danger";
                                    break;
                                case AdminActionType.Ban:
                                    style = item.Expires != null ? "dark" : "danger";
                                    break;
                                default:
                                    style = "info";
                                    break;
                            }
                        }

                        @* ReSharper disable once UnknownCssClass *@
                        <div class="alert alert-@style">
                            @Html.Raw(item.Text)
                        </div>

                        <p>
                            @if (User.Identity.IsInSeniorAdminRole() || User.Identity.GetUserId() == item.Admin?.Id)
                            {
                                switch (item.Type)
                                {
                                    case AdminActionType.Observation:
                                        <a href="@Url.Action("Edit", "Observations", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit Observation</a>
                                        break;
                                    case AdminActionType.Warning:
                                        <a href="@Url.Action("Edit", "Warnings", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit Warning</a>
                                        break;
                                    case AdminActionType.Kick:
                                        <a href="@Url.Action("Edit", "Kicks", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit Kick</a>
                                        break;
                                    case AdminActionType.TempBan:
                                        <a href="@Url.Action("Edit", "TempBans", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit Temp Ban</a>

                                        if (item.Expires > DateTime.UtcNow)
                                        {
                                            <a href="@Url.Action("Lift", "TempBans", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-remove"></span> Lift Ban</a>
                                        }

                                        break;
                                    case AdminActionType.Ban:
                                        <a href="@Url.Action("Edit", "Bans", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Edit Ban</a>

                                        if (item.Expires == null)
                                        {
                                            <a href="@Url.Action("Lift", "Bans", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-remove"></span> Lift Ban</a>
                                        }

                                        break;
                                }
                            }

                            @if (item.Type == AdminActionType.Ban && item.Admin == null)
                            {
                                <a href="@Url.Action("Claim", "Bans", new {id = item.AdminActionId})" class="btn btn-sm btn-primary"><span class="glyphicon glyphicon-pencil"></span> Claim Ban</a>
                            }
                        </p>
                    </div>
                </div>
            </div>
        </div>
    }

</div>