@{
    ViewBag.Title = "Global Chat Log";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-sm-12">

            <div class="ibox">
                <div class="input-group">
                    <input type="text" id="search-string" class="form-control">
                    <span class="input-group-btn">
                        <button type="button" id="search-button" class="btn btn-primary">
                            Search
                        </button>
                        <button type="button" id="clear-button" class="btn btn-primary">
                            Clear
                        </button>
                        <button type="button" id="refresh-button" class="btn btn-primary">
                            Refresh
                        </button>
                    </span>
                </div>
            </div>

        </div>
    </div>

    <div class="jqGrid_wrapper">
        <table id="chatLog"></table>
        <div id="chatLogPager"></div>
    </div>

</div>

@section Styles {
    @Styles.Render("~/Content/plugins/jqGrid/jqGridStyles")
}

@section Scripts {
    @Scripts.Render("~/plugins/jqGrid")

<script type="text/javascript">
        $(document).ready(function() {

            function formatPlayerUrl(cellValue, options, rowObject) {
                return "<a href='/Players/Details/" + rowObject.PlayerId + "'>" + cellValue + "</a>";
            }

            function formatChatLogUrl(cellValue, options, rowObject) {
                return "<a href='/Servers/ChatLogPermaLink/" + rowObject.ChatLogId + "'>PermLink</a>";
            }

            jQuery("#chatLog").jqGrid({
                url: '/Servers/GetGlobalChatLogAjax',
                datatype: 'json',
                mType: 'GET',
                colNames: ['Player Id', 'Timestamp', 'Username', 'Type', 'Message', 'ChatLog Id'],
                colModel: [
                    {
                        name: 'PlayerId',
                        index: 'PlayerId',
                        hidden: true,
                        editable: false,
                        sortable: false,
                        search: false
                    },
                    {
                        name: 'Timestamp',
                        index: 'Timestamp',
                        editable: false,
                        width: 20,
                        sortable: false,
                        search: false
                    },
                    {
                        name: 'Username',
                        index: 'Username',
                        editable: false,
                        width: 20,
                        sortable: false,
                        search: true,
                        searchoptions: { sopt: ["eq", "cn"] },
                        formatter: formatPlayerUrl
                    },
                    { name: 'Type', index: 'Type', editable: false, width: 10, sortable: false, search: false },
                    {
                        name: 'Message',
                        index: 'Message',
                        editable: false,
                        sortable: false,
                        search: true,
                        searchoptions: { sopt: ["cn"] }
                    },
                    {
                        name: 'ChatLogId',
                        index: 'ChatLogId',
                        hidden: false,
                        editable: false,
                        width: 10,
                        sortable: false,
                        search: false,
                        formatter: formatChatLogUrl
                    }
                ],
                pager: '#chatLogPager',
                rowNum: 20,
                height: 700,
                autowidth: true,
                caption: 'Global Chat Logs',
                guiStyle: "bootstrap4",
                icons: "fontAwesome",
                hidegrid: false
            }).navGrid('#chatLogPager',
                {
                    edit: false,
                    add: false,
                    del: false,
                    search: false,
                    refresh: false
                });

            function submitSearch() {
                searchString = $.trim($("#search-string").val());

                if(searchString == ""){
                    alert("Please enter something before searching!");
                    $("#search-string").val("").focus();
                }
                else{
                    $("#chatLog").jqGrid('setGridParam',{url:'/Servers/GetGlobalChatLogAjax?_search=true&searchString='+searchString});
                    $("#chatLog").jqGrid().trigger('reloadGrid');
                }
            }

            $("#search-button").button().click(submitSearch);

            $("#clear-button").button().click(function () {
                $("#search-string").val("").focus();
                $("#chatLog").jqGrid('setGridParam',{url:'/Servers/GetGlobalChatLogAjax'});
                $("#chatLog").jqGrid().trigger('reloadGrid');
            });

            $("#search-string").on("keypress", function(event) {
                if (event.which == 13 && !event.shiftKey) {
                    event.preventDefault();
                    submitSearch();
                }
            });

            $("#refresh-button").button().click(function () {
                $("#chatLog").jqGrid().trigger('reloadGrid');
            });

        });

</script>
}