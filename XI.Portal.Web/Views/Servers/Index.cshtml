@using XI.Portal.Library.Auth.Extensions
@using XI.Portal.Web.Extensions
@model XI.Portal.Web.ViewModels.Servers.ServersIndexViewModel

@{
    ViewBag.Title = "Servers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper wrapper-content animated fadeInRight">

    <div class="row">
        <div class="col-sm-12">

            <div class="ibox">
                <div class="ibox-content">

                    <table class="table">
                        <tr>
                            <th>

                            </th>
                            <th>
                                @Html.Label("Title")
                            </th>
                            <th>
                                @Html.Label("Hostname")
                            </th>
                            <th></th>
                            <th>
                                @Html.Label("Players")
                            </th>
                            <th>
                                @Html.Label("Map")
                            </th>
                            <th>
                                @Html.Label("Mod")
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model.GameServers)
                        {
                            <tr>
                                <td>
                                    @Html.GameTypeIcon(item.GameType)
                                </td>
                                <td>
                                    @Html.ServerName(item)
                                </td>
                                <td>
                                    @Html.ServerHostAndPort(item.Hostname, item.QueryPort)

                                </td>
                                <td>
                                    @Html.GameTrackerIcon(item.Hostname, item.QueryPort)
                                    @Html.SteamIcon(item.GameType, item.Hostname, item.QueryPort)
                                    @Html.HlswIcon(item.GameType, item.Hostname, item.QueryPort)
                                </td>
                                <td>
                                    @{
                                        var percentage = item.LiveCurrentPlayers / (double) item.LiveMaxPlayers * 100;
                                    }

                                    <div class="progress" style="margin-right: 20px">
                                        <div style="width: @percentage%" aria-valuemax="100" aria-valuemin="0" aria-valuenow="@percentage" role="progressbar" class="progress-bar">
                                            <span class="sr-only">@percentage% Slots Filled</span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LiveMap)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LiveMod)
                                </td>
                                <td>
                                    @Html.ActionLink("Server Info", "ServerInfo", new {id = item.ServerId})

                                    @if (User.Identity.IsInAdminOrModeratorRole() && item.ShowChatLog)
                                    {
                                        @Html.Raw("| ")
                                        @Html.ActionLink("Chat Log", "ChatLog", new {id = item.ServerId})
                                    }
                                </td>
                            </tr>
                        }

                    </table>

                </div>
            </div>

        </div>
    </div>


    <div class="row">
        <div class="col-sm-12">

            <div class="ibox">
                <div class="ibox-title">
                    Players Online in the last 24 Hours (@Model.LivePlayerLocations.Count()) across all tracked game servers
                </div>

                <div class="ibox-content">
                    <div id="map" style="height: 600px; width: 100%;"></div>
                </div>
            </div>

        </div>
    </div>

</div>

@section Scripts {
    <script>
        function initMap() {

            var map = new google.maps.Map(document.getElementById('map'),
                {
                    zoom: 2,
                    center: { lat: 0.00, lng: 0.00 }
                });

            var locations = [
                @foreach (var location in Model.LivePlayerLocations)
                {
                    <text>
                        ['Player', @location.Lat, @location.Long],
                    </text>
                }
            ];

            for (count = 0; count < locations.length; count++) {
                new google.maps.Marker({
                    position: new google.maps.LatLng(locations[count][1], locations[count][2]),
                    map: map,
                    title: locations[count][0]
                });
            }
        }
    </script>

    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqX0zqt8PWTqRtk0PA6luVuOJiWSgbiw0&signed_in=false&callback=initMap"></script>
}